/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.fpt.Views;

import com.fpt.Dao.NhanVienDAO;
import com.fpt.Entitys.NhanVien;
import com.fpt.Utils.Auth;
import com.fpt.Utils.MsgBox;
import com.fpt.Utils.Xpro;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import javax.swing.JMenuItem;
import javax.swing.JPopupMenu;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author HuynhQuangLe
 */
public class JplNhanVien extends javax.swing.JPanel {

    /**
     * Creates new form JplKhachHang
     */
    public JplNhanVien() {
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtTenNhanVien = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtSoDienThoai = new javax.swing.JTextField();
        cboQuyen = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDiaChi = new javax.swing.JTextArea();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        btnSave = new javax.swing.JButton();
        btnLamMoi = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblNhanVien = new javax.swing.JTable();
        txtTim = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Thông tin"));

        jLabel1.setText("Tên nhân viên");

        jLabel2.setText("Email");

        jLabel5.setText("Số điện thoại");

        cboQuyen.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "NhanVien", "QuanLy" }));

        jLabel6.setText("Vai trò");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtTenNhanVien, javax.swing.GroupLayout.DEFAULT_SIZE, 282, Short.MAX_VALUE)
                    .addComponent(txtEmail)
                    .addComponent(txtSoDienThoai)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(cboQuyen, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTenNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSoDienThoai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboQuyen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22))
        );

        jLabel3.setText("Địa chỉ");

        txtDiaChi.setColumns(20);
        txtDiaChi.setRows(5);
        jScrollPane1.setViewportView(txtDiaChi);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)
                        .addGap(236, 236, 236))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.setLayout(new java.awt.GridLayout(2, 1, 5, 5));

        btnSave.setText("Lưu");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        jPanel6.add(btnSave);

        btnLamMoi.setText("Làm mới");
        btnLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiActionPerformed(evt);
            }
        });
        jPanel6.add(btnLamMoi);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(202, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Danh sách"));

        tblNhanVien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã", "Tên nhân viên", "Email", "Số điện thoại", "Địa chỉ", "Vai trò"
            }
        ));
        tblNhanVien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblNhanVienMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblNhanVien);

        txtTim.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimKeyReleased(evt);
            }
        });

        jLabel4.setText("Tìm");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTim, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtTim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 540, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtTimKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKeyReleased
        timKiemNV();
    }//GEN-LAST:event_txtTimKeyReleased

    private void tblNhanVienMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblNhanVienMouseClicked
        this.row = tblNhanVien.rowAtPoint(evt.getPoint());
        editNV();
    }//GEN-LAST:event_tblNhanVienMouseClicked

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        saveNV();
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnLamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiActionPerformed
        clearFormNV();
    }//GEN-LAST:event_btnLamMoiActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLamMoi;
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox<String> cboQuyen;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblNhanVien;
    private javax.swing.JTextArea txtDiaChi;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtSoDienThoai;
    private javax.swing.JTextField txtTenNhanVien;
    private javax.swing.JTextField txtTim;
    // End of variables declaration//GEN-END:variables
    public int row = -1;
    public JPopupMenu popupMenu;
    public JMenuItem jMenuItem1;
    public NhanVienDAO daoNhanVien = new NhanVienDAO();
    protected List<NhanVien> list = new ArrayList<>();

    private void clearListNhanVien() {
        list.clear();
        list.addAll(Auth.isManager() ? daoNhanVien.selectAll() : Collections.singletonList(daoNhanVien.selectById(Auth.user.getMaNV())));
    }

    private void init() {
        clearListNhanVien();
        fillToTablebNV();
        row = -1;
        setupPopupMenu();
    }

    private void setupPopupMenu() {
        popupMenu = new JPopupMenu();
        jMenuItem1 = new JMenuItem("Xóa");
        popupMenu.add(jMenuItem1);
        tblNhanVien.setComponentPopupMenu(popupMenu);
        jMenuItem1.addActionListener(e -> deleteNV());
    }

    public void fillToTablebNV() {
        DefaultTableModel model = (DefaultTableModel) tblNhanVien.getModel();
        model.setRowCount(0);
        try {
            for (NhanVien nv : list) {
                model.addRow(new Object[]{
                    nv.getMaNV(),
                    nv.getTenNV(),
                    nv.getEmail(),
                    nv.getSoDT(),
                    nv.getDiaChi(),
                    nv.getQuyen()});
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void deleteNV() {
        if (!Auth.isManager()) {
            MsgBox.alert(this, "Bạn không có quyền xóa");
            return;
        }
        if (row >= 0) {
            NhanVien nv = getFormNV();
            if (MsgBox.confirm(this, "Bạn thực sự muốn xóa nhân viên này?")) {
                
                if (daoNhanVien.delete(nv) == 1) {
                    clearListNhanVien();
                    fillToTablebNV();
                    MsgBox.alert(this, "Xóa thành công.");
                    clearFormNV();
                } else {
                    MsgBox.alert(this, "Xóa thất bại.");
                }
            }
        } else {
            MsgBox.alert(this, "Vui lòng chọn một nhân viên để xóa?");
        }
    }

    private void saveNV() {
        String maNV = row >= 0 ? (String) tblNhanVien.getValueAt(row, 0) : daoNhanVien.nextID(daoNhanVien.maxID());
        NhanVien nv = daoNhanVien.selectById(maNV);
        if (nv != null) {
            updateNV();
        } else {
            insertNV();
        }
    }

    private void insertNV() {
            NhanVien model = getFormNV();
        if (checkNV(model.getMaNV())) {
            try {
            
                if (daoNhanVien.insert(model) == 1) {
                    clearListNhanVien();
                    fillToTablebNV();
                    clearFormNV();
                    MsgBox.alert(this, "Thêm mới thành công");
                } else {
                    MsgBox.alert(this, "Thêm mới thất bại");
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }

    private void updateNV() {
        NhanVien model = getFormNV();
        if (checkNV(model.getMaNV())) {
            try {
                NhanVien nv = daoNhanVien.selectById(model.getMaNV());
                model.setMatKhau(nv.getMatKhau());
                if (Auth.isManager()) {
                    if (!Auth.user.getMaNV().equals(nv.getMaNV()) && Auth.user.getQuyen().equals(nv.getQuyen())) {
                        MsgBox.alert(this, "Không được cập nhật thông tin trưởng phòng khác!");
                        setForm(nv);
                        return;
                    }
                } else {
                    if (!Auth.user.getQuyen().equals(model.getQuyen())) {
                        MsgBox.alert(this, "Không được cập nhật vai trò từ nhân viên thành trưởng phòng !");
                        setForm(nv);
                        return;
                    }
                }

                if (daoNhanVien.update(model) == 1) {
                    clearListNhanVien();
                    fillToTablebNV();
                    clearFormNV();
                    NhanVien nv1 = daoNhanVien.selectById(model.getMaNV());
                    MsgBox.alert(this, "Cập nhật thành công");
                    if (!nv1.getQuyen().equals(nv.getQuyen())) {
                        MsgBox.alert(this, "Vai Trò của bạn đã thay đổi, vui lòng đăng nhập lại");
                    }
                } else {
                    MsgBox.alert(this, "Cập nhật thất bại");
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }

    private void clearFormNV() {
        setForm(new NhanVien());
        row = -1;
        cboQuyen.setSelectedIndex(0);
    }

    private void setForm(NhanVien model) {
        txtTenNhanVien.setText(model.getTenNV());
        txtEmail.setText(model.getEmail());
        txtSoDienThoai.setText(model.getSoDT());
        txtDiaChi.setText(model.getDiaChi());
        cboQuyen.setSelectedItem(model.getQuyen());
    }

    private NhanVien getFormNV() {
        NhanVien nv = new NhanVien();
        if (row >= 0) {
            String id = (String) tblNhanVien.getValueAt(row, 0);
            nv.setMaNV(id);
        } else {
            nv.setMaNV(daoNhanVien.nextID(daoNhanVien.maxID()));
        }
        nv.setTenNV(Xpro.toUpperFirstChar(txtTenNhanVien.getText()));
        nv.setEmail(txtEmail.getText());
        nv.setSoDT(txtSoDienThoai.getText());
        nv.setDiaChi(txtDiaChi.getText());
        nv.setQuyen((String) cboQuyen.getSelectedItem());
        return nv;
    }

    private boolean checkNV(String ma) {
        clearListNhanVien();
        StringBuilder error = new StringBuilder();
        String ten = txtTenNhanVien.getText();
        String email = txtEmail.getText();
        String sdt = txtSoDienThoai.getText();
        String dchi = txtDiaChi.getText();
        String checkten = "[\\p{L} ]+";
        String checksdt = "^0\\d{9}";
        String checkmail = "\\w+@\\w+(\\.\\w+){1,2}";
        if (ten.isEmpty()) {
            error.append("Tên của Nhân viên không được bỏ trống\n");
        } else if (!ten.matches(checkten)) {
            error.append("Tên của Nhân viên không chứa ký tự số\n");
        }
        if (email.isEmpty()) {
            error.append("Email không được bỏ trống.\n");
        } else if (!email.matches(checkmail)) {
            error.append("Email không đúng định dạng.\n");
        } else {
            for (NhanVien nv : list) {
                if (!nv.getMaNV().equals(ma) && nv.getEmail().equals(email)) {
                    error.append("Email đã tồn tại.\n");
                    break;
                }
            }
        }
        if (sdt.isEmpty()) {
            error.append("Số điện thoại không được bỏ trống\n");
        } else if (!sdt.matches(checksdt)) {
            error.append("Số điện thoại không đúng định dạng 0 đầu và 9 số\n");
        }

        for (NhanVien nv : list) {
            if (!nv.getMaNV().equals(ma) && sdt.equals(nv.getSoDT())) {
                error.append("Số điện thoại đã tồn tại\n");
                break;
            }
        }

        if (dchi.isEmpty()) {
            error.append("Địa chỉ không được bỏ trống.\n");
        }

        if (error.length() > 0) {
            MsgBox.alert(this, error.toString().trim());
            return false;
        }
        return true;
    }

    private void timKiemNV() {
        String tim = txtTim.getText();
        list = tim.isEmpty() ? daoNhanVien.selectAll() : daoNhanVien.selectByKeyword(tim);
        fillToTablebNV();
    }

    private void editNV() {
        try {
            String ma = (String) tblNhanVien.getValueAt(row, 0);
            NhanVien nv = daoNhanVien.selectById(ma);
            if (nv != null) {
                setForm(nv);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
