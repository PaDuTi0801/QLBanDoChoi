/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.fpt.Views;

import com.fpt.Dao.LoaiSanPhamDAO;
import com.fpt.Dao.MauSacDAO;
import com.fpt.Dao.SanPhamDAO;
import com.fpt.Dao.XuatXuDAO;
import com.fpt.Entitys.LoaiSanPham;
import com.fpt.Entitys.MauSac;
import com.fpt.Entitys.SanPham;
import com.fpt.Entitys.XuatXu;
import com.fpt.Utils.Auth;
import com.fpt.Utils.MsgBox;
import com.fpt.Utils.Xpro;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JMenuItem;
import javax.swing.JPopupMenu;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author HuynhQuangLe
 */
public class JplSanPham extends javax.swing.JPanel {

    /**
     * Creates new form JplSanPham
     */
    public JplSanPham() {
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtTenSanPham = new javax.swing.JTextField();
        txtGiaNhap = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtGiaBan = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtSoLuong = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        cboTenMau = new javax.swing.JComboBox<>();
        cboTenLoai = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        cboQuocGia = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtMaVach = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        lblHinh = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        btnSaveSP = new javax.swing.JButton();
        btnClearSP = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSanPham = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        txtTimSanPham = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        txtTenLoai = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtMoTaLoaiSP = new javax.swing.JTextArea();
        jLabel12 = new javax.swing.JLabel();
        jPanel19 = new javax.swing.JPanel();
        btnSaveLoaiSanPham = new javax.swing.JButton();
        btnClearLoaiSanPham = new javax.swing.JButton();
        jPanel14 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblLoaiSanPham = new javax.swing.JTable();
        txtTimLoaiSP = new javax.swing.JTextField();
        jPanel11 = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        txtTenXX = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtMoTaXX = new javax.swing.JTextArea();
        jPanel20 = new javax.swing.JPanel();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jPanel16 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tblXuatXu = new javax.swing.JTable();
        jLabel18 = new javax.swing.JLabel();
        txtTimXuatXu = new javax.swing.JTextField();
        jPanel12 = new javax.swing.JPanel();
        jPanel17 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        txtTenMau = new javax.swing.JTextField();
        jPanel21 = new javax.swing.JPanel();
        btnSaveMau = new javax.swing.JButton();
        btnClearMau = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        txtMoTaMauSac = new javax.swing.JTextArea();
        jLabel16 = new javax.swing.JLabel();
        jPanel18 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        txtTimMau = new javax.swing.JTextField();
        jScrollPane7 = new javax.swing.JScrollPane();
        tblMauSac = new javax.swing.JTable();

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Thông tin sản phẩm"));

        jLabel1.setText("Tên sản phẩm");

        txtGiaNhap.setText("1000");

        jLabel2.setText("Giá nhập");

        txtGiaBan.setText("1100");

        jLabel3.setText("Giá bán");

        txtSoLuong.setText("5");

        jLabel4.setText("Số lượng ");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtTenSanPham)
                    .addComponent(txtGiaNhap, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)
                    .addComponent(txtGiaBan, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)
                    .addComponent(txtSoLuong, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTenSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtGiaNhap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtGiaBan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jLabel5.setText("Tên màu");

        cboTenMau.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cboTenLoai.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel6.setText("Tên loại");

        cboQuocGia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel7.setText("Quốc gia");

        jLabel8.setText("Mã vạch");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cboTenMau, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cboTenLoai, 0, 229, Short.MAX_VALUE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 92, Short.MAX_VALUE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cboQuocGia, 0, 229, Short.MAX_VALUE)
                            .addComponent(txtMaVach))))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboTenMau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboTenLoai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboQuocGia, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMaVach, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lblHinh.setText("Hinh");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 165, Short.MAX_VALUE)
            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(lblHinh, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 122, Short.MAX_VALUE)
            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel8Layout.createSequentialGroup()
                    .addComponent(lblHinh, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        jPanel9.setLayout(new java.awt.GridLayout(2, 1, 5, 5));

        btnSaveSP.setText("Lưu");
        btnSaveSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveSPActionPerformed(evt);
            }
        });
        jPanel9.add(btnSaveSP);

        btnClearSP.setText("Làm mới");
        btnClearSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearSPActionPerformed(evt);
            }
        });
        jPanel9.add(btnClearSP);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(83, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 18, Short.MAX_VALUE))
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Danh sách"));

        tblSanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã", "Tên ", "Số lượng", "Giá nhập", "Giá bán", "Mã vạch", "Hình"
            }
        ));
        tblSanPham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSanPhamMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tblSanPhamMouseEntered(evt);
            }
        });
        jScrollPane1.setViewportView(tblSanPham);

        jLabel10.setText("Tìm");

        txtTimSanPham.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimSanPhamKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTimSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtTimSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(3, 3, 3)))
                .addGap(5, 5, 5)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 483, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Sản phẩm", jPanel1);

        jPanel2.setLayout(new java.awt.GridLayout(3, 1, 5, 5));

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder("Loại sản phẩm"));
        jPanel10.setLayout(new java.awt.GridLayout(1, 0));

        jPanel13.setBorder(javax.swing.BorderFactory.createTitledBorder("Thông tin loại sản phẩm"));

        jLabel11.setText("Tên loại sản phẩm");

        txtMoTaLoaiSP.setColumns(20);
        txtMoTaLoaiSP.setRows(5);
        jScrollPane2.setViewportView(txtMoTaLoaiSP);

        jLabel12.setText("Mô tả");

        jPanel19.setLayout(new java.awt.GridLayout(2, 1, 5, 5));

        btnSaveLoaiSanPham.setText("Lưu");
        btnSaveLoaiSanPham.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveLoaiSanPhamActionPerformed(evt);
            }
        });
        jPanel19.add(btnSaveLoaiSanPham);

        btnClearLoaiSanPham.setText("Làm mới");
        btnClearLoaiSanPham.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearLoaiSanPhamActionPerformed(evt);
            }
        });
        jPanel19.add(btnClearLoaiSanPham);

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtTenLoai)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jPanel19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtTenLoai)
                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jPanel19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(82, Short.MAX_VALUE))
        );

        jPanel10.add(jPanel13);

        jPanel14.setBorder(javax.swing.BorderFactory.createTitledBorder("Danh sách"));

        jLabel13.setText("Tìm");

        tblLoaiSanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã", "Tên loại sản phẩm"
            }
        ));
        tblLoaiSanPham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblLoaiSanPhamMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblLoaiSanPham);

        txtTimLoaiSP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimLoaiSPKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTimLoaiSP, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 482, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTimLoaiSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel10.add(jPanel14);

        jPanel2.add(jPanel10);

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder("Xuất xứ"));
        jPanel11.setLayout(new java.awt.GridLayout(1, 2, 5, 5));

        jPanel15.setBorder(javax.swing.BorderFactory.createTitledBorder("Thông tin xuất xứ"));

        txtMoTaXX.setColumns(20);
        txtMoTaXX.setRows(5);
        jScrollPane4.setViewportView(txtMoTaXX);

        jPanel20.setLayout(new java.awt.GridLayout(2, 1, 5, 5));

        jButton5.setText("Lưu");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel20.add(jButton5);

        jButton6.setText("Làm mới");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel20.add(jButton6);

        jLabel14.setText("Tên xuất xứ");

        jLabel15.setText("Mô tả");

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtTenXX)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtTenXX)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 88, Short.MAX_VALUE))
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel11.add(jPanel15);

        jPanel16.setBorder(javax.swing.BorderFactory.createTitledBorder("Danh sách"));

        tblXuatXu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã", "Tên xuất xứ"
            }
        ));
        tblXuatXu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblXuatXuMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(tblXuatXu);

        jLabel18.setText("Tìm");

        txtTimXuatXu.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimXuatXuKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel16Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTimXuatXu, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 482, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTimXuatXu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel11.add(jPanel16);

        jPanel2.add(jPanel11);

        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder("Màu sắc"));
        jPanel12.setLayout(new java.awt.GridLayout(1, 2, 5, 5));

        jPanel17.setBorder(javax.swing.BorderFactory.createTitledBorder("Thông tin màu sắc"));

        jLabel17.setText("Mô tả");

        jPanel21.setLayout(new java.awt.GridLayout(2, 1, 5, 5));

        btnSaveMau.setText("Lưu");
        btnSaveMau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveMauActionPerformed(evt);
            }
        });
        jPanel21.add(btnSaveMau);

        btnClearMau.setText("Làm mới");
        btnClearMau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearMauActionPerformed(evt);
            }
        });
        jPanel21.add(btnClearMau);

        txtMoTaMauSac.setColumns(20);
        txtMoTaMauSac.setRows(5);
        jScrollPane5.setViewportView(txtMoTaMauSac);

        jLabel16.setText("Tên màu sắc");

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel17Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtTenMau)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel21, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel17Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtTenMau)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel17Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jPanel21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel12.add(jPanel17);

        jPanel18.setBorder(javax.swing.BorderFactory.createTitledBorder("Danh sách"));

        jLabel19.setText("Tìm");

        txtTimMau.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimMauKeyReleased(evt);
            }
        });

        tblMauSac.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã", "Tên màu sắc"
            }
        ));
        tblMauSac.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMauSacMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(tblMauSac);

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane7)
                    .addGroup(jPanel18Layout.createSequentialGroup()
                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTimMau, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 106, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTimMau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel12.add(jPanel18);

        jPanel2.add(jPanel12);

        jTabbedPane1.addTab("Danh mục", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 749, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtTimLoaiSPKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimLoaiSPKeyReleased
        timKiemLSP();
    }//GEN-LAST:event_txtTimLoaiSPKeyReleased

    private void txtTimXuatXuKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimXuatXuKeyReleased
        timKiemXX();
    }//GEN-LAST:event_txtTimXuatXuKeyReleased

    private void txtTimMauKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimMauKeyReleased
        timKiemMS();
    }//GEN-LAST:event_txtTimMauKeyReleased

    private void btnSaveLoaiSanPhamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveLoaiSanPhamActionPerformed
        saveLSP();
    }//GEN-LAST:event_btnSaveLoaiSanPhamActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        saveXX();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void btnSaveMauActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveMauActionPerformed
        saveMS();
    }//GEN-LAST:event_btnSaveMauActionPerformed

    private void btnClearLoaiSanPhamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearLoaiSanPhamActionPerformed
        clearFormLSP();
    }//GEN-LAST:event_btnClearLoaiSanPhamActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        clearFormXX();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void btnClearMauActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearMauActionPerformed
        clearFormMS();
    }//GEN-LAST:event_btnClearMauActionPerformed

    private void tblLoaiSanPhamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblLoaiSanPhamMouseClicked
        this.row = tblLoaiSanPham.rowAtPoint(evt.getPoint());
        editLSP();
        checkPopup(evt);
    }//GEN-LAST:event_tblLoaiSanPhamMouseClicked

    private void tblXuatXuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblXuatXuMouseClicked
        this.row = tblXuatXu.rowAtPoint(evt.getPoint());
        editXX();
        checkPopup(evt);
    }//GEN-LAST:event_tblXuatXuMouseClicked

    private void tblMauSacMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMauSacMouseClicked
        this.row = tblMauSac.rowAtPoint(evt.getPoint());
        editMS();
        checkPopup(evt);
    }//GEN-LAST:event_tblMauSacMouseClicked

    private void btnSaveSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveSPActionPerformed
        saveSP();        // TODO add your handling code here:
    }//GEN-LAST:event_btnSaveSPActionPerformed

    private void btnClearSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearSPActionPerformed
        clearFormSP();        // TODO add your handling code here:
    }//GEN-LAST:event_btnClearSPActionPerformed

    private void tblSanPhamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSanPhamMouseClicked
        this.row = tblSanPham.rowAtPoint(evt.getPoint());
        editSP();
        checkPopup(evt);
    }//GEN-LAST:event_tblSanPhamMouseClicked

    private void txtTimSanPhamKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimSanPhamKeyReleased
        timKiemSP();        // TODO add your handling code here:
    }//GEN-LAST:event_txtTimSanPhamKeyReleased

    private void tblSanPhamMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSanPhamMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_tblSanPhamMouseEntered


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClearLoaiSanPham;
    private javax.swing.JButton btnClearMau;
    private javax.swing.JButton btnClearSP;
    private javax.swing.JButton btnSaveLoaiSanPham;
    private javax.swing.JButton btnSaveMau;
    private javax.swing.JButton btnSaveSP;
    private javax.swing.JComboBox<String> cboQuocGia;
    private javax.swing.JComboBox<String> cboTenLoai;
    private javax.swing.JComboBox<String> cboTenMau;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblHinh;
    private javax.swing.JTable tblLoaiSanPham;
    private javax.swing.JTable tblMauSac;
    private javax.swing.JTable tblSanPham;
    private javax.swing.JTable tblXuatXu;
    private javax.swing.JTextField txtGiaBan;
    private javax.swing.JTextField txtGiaNhap;
    private javax.swing.JTextField txtMaVach;
    private javax.swing.JTextArea txtMoTaLoaiSP;
    private javax.swing.JTextArea txtMoTaMauSac;
    private javax.swing.JTextArea txtMoTaXX;
    private javax.swing.JTextField txtSoLuong;
    private javax.swing.JTextField txtTenLoai;
    private javax.swing.JTextField txtTenMau;
    private javax.swing.JTextField txtTenSanPham;
    private javax.swing.JTextField txtTenXX;
    private javax.swing.JTextField txtTimLoaiSP;
    private javax.swing.JTextField txtTimMau;
    private javax.swing.JTextField txtTimSanPham;
    private javax.swing.JTextField txtTimXuatXu;
    // End of variables declaration//GEN-END:variables
  public int row = -1;
    public JPopupMenu popupMenu;
    public JMenuItem jMenuItem1;
    public LoaiSanPhamDAO daoLoaiSanPham = new LoaiSanPhamDAO();
    public MauSacDAO daoMauSac = new MauSacDAO();
    public XuatXuDAO daoXuatXu = new XuatXuDAO();
    public SanPhamDAO daoSanPham = new SanPhamDAO();
    protected List<LoaiSanPham> listLSP = new ArrayList<>();
    protected List<MauSac> listMS = new ArrayList<>();
    protected List<XuatXu> listXX = new ArrayList<>();
    protected List<SanPham> listSP = new ArrayList<>();

    private void init() {
        timKiemLSP();
        timKiemMS();
        timKiemXX();
        timKiemSP();
        fillComboBoxLoaiSP();
        fillComboBoxMau();
        fillComboBoxXX();
        setupPopupMenuMS();
        setupPopupMenuLSP();
        setupPopupMenuXX();
        setupPopupMenuSP();
        row = -1;
    }
//sampham 

    private void setupPopupMenu(JTable table, ActionListener actionListener) {
        popupMenu = new JPopupMenu();
        jMenuItem1 = new JMenuItem("Xóa");
        popupMenu.add(jMenuItem1);
        table.setComponentPopupMenu(popupMenu);
        jMenuItem1.addActionListener(actionListener);
    }

    private void setupPopupMenuSP() {
        setupPopupMenu(tblSanPham, (ActionEvent e) -> {
            deleteSP();
        });
    }

    private void setupPopupMenuLSP() {
        setupPopupMenu(tblLoaiSanPham, (ActionEvent e) -> {
            deleteLSP();
        });
    }

    private void setupPopupMenuMS() {
        setupPopupMenu(tblMauSac, (ActionEvent e) -> {
            deleteMS();
        });
    }

    private void setupPopupMenuXX() {
        setupPopupMenu(tblXuatXu, (ActionEvent e) -> {
            deleteXX();
        });
    }

    private void checkPopup(MouseEvent e) {
        if (e.isPopupTrigger()) {
            popupMenu.show(e.getComponent(), e.getX(), e.getY());
        }
    }

    private void clearListSanPham() {
        listSP.clear();
        listSP.addAll(daoSanPham.selectAll());
    }

    public void fillToTablebSP() {
        DefaultTableModel model = (DefaultTableModel) tblSanPham.getModel();
        model.setRowCount(0);
        try {
            for (SanPham sp : listSP) {
                model.addRow(new Object[]{
                    sp.getMa(),
                    sp.getTen(),
                    sp.getSoLuong(),
                    sp.getGiaNhap(),
                    sp.getGiaBan(),
                    sp.getMaVach(),
                    sp.getHinh()
                });
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void deleteSP() {
        if (!Auth.isManager()) {
            MsgBox.alert(this, "Bạn không có quyền xóa");
            return;
        }
        if (row >= 0) {
            SanPham model = getFormSP();
            if (MsgBox.confirm(this, "Bạn thực sự muốn xóa khách hàng này?")) {
                if (daoSanPham.delete(model) == 1) {
                    clearListSanPham();
                    fillToTablebSP();
                    clearFormSP();
                    MsgBox.alert(this, "Xóa thành công.");
                } else {
                    MsgBox.alert(this, "Xóa thất bại.");
                }
            }
        } else {
            MsgBox.alert(this, "Vui lòng chọn một khách hàng để xóa?");
        }
    }

    private void saveSP() {
        if (row >= 0) {
            updateSP();
        } else {
            insertSP();
        }
    }

    private void insertSP() {
        SanPham model = getFormSP();
        if (checkSP(model.getMa())) {
            try {
                if (daoSanPham.insert(model) == 1) {
                    clearListSanPham();
                    fillToTablebSP();
                    clearFormSP();
                    MsgBox.alert(this, "Thêm mới thành công");
                } else {
                    MsgBox.alert(this, "Thêm mới thất bại");
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }

    private void updateSP() {
        SanPham model = getFormSP();
        if (checkSP(model.getMa())) {
            try {
                if (daoSanPham.update(model) == 1) {
                    clearListSanPham();
                    fillToTablebSP();
                    clearFormSP();
                    MsgBox.alert(this, "Cập nhật thành công");
                } else {
                    MsgBox.alert(this, "Cập nhật thất bại");
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }

    private void clearFormSP() {
        setFormSP(new SanPham());
        cboQuocGia.setSelectedIndex(0);
        cboTenLoai.setSelectedIndex(0);
        cboTenMau.setSelectedIndex(0);
        row = -1;
    }

    private void setFormSP(SanPham model) {
        txtTenSanPham.setText(model.getTen());
        txtGiaBan.setText(model.getGiaBan() + "");
        txtGiaNhap.setText(model.getGiaNhap() + "");
        txtSoLuong.setText(model.getSoLuong() + "");
        LoaiSanPham lsp = daoLoaiSanPham.selectById(model.getMaLoai());
        cboTenLoai.setSelectedItem(lsp);
        MauSac ms = daoMauSac.selectById(model.getMaMau());
        cboTenMau.setSelectedItem(ms);
        XuatXu xx = daoXuatXu.selectById(model.getMaXuatXu());
        cboQuocGia.setSelectedItem(xx);
        txtMaVach.setText(model.getMaVach());
    }

    private SanPham getFormSP() {
        SanPham sp = new SanPham();
        if (row >= 0) {
            int id = (int) tblSanPham.getValueAt(row, 0);
            sp.setMa(id);
        } else {
            sp.setMa(Integer.parseInt(daoSanPham.maxID() + 1));
        }
        sp.setTen(Xpro.toUpperFirstChar(txtTenLoai.getText()));
        sp.setGiaNhap(Double.parseDouble(txtGiaNhap.getText()));
        sp.setGiaBan(Double.parseDouble(txtGiaBan.getText()));
        sp.setSoLuong(Integer.parseInt(txtSoLuong.getText()));
        LoaiSanPham lsp = (LoaiSanPham) cboTenLoai.getSelectedItem();
        if (lsp != null) {
            sp.setMaLoai(lsp.getMa());
        }
        MauSac ms = (MauSac) cboTenMau.getSelectedItem();
        if (ms != null) {
            sp.setMaMau(ms.getMa());
        }
        XuatXu xx = (XuatXu) cboQuocGia.getSelectedItem();
        if (xx != null) {
            sp.setMaMau(xx.getMa());
        }
        sp.setMaVach(txtMaVach.getText());
        return sp;
    }

    private void fillComboBoxMau() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboTenMau.getModel();
        model.removeAllElements();
        List<MauSac> list = daoMauSac.selectAll();
        for (MauSac ms : list) {
            model.addElement(ms);
        }
    }

    private void fillComboBoxLoaiSP() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboTenLoai.getModel();
        model.removeAllElements();
        List<LoaiSanPham> list = daoLoaiSanPham.selectAll();
        for (LoaiSanPham lsp : list) {
            model.addElement(lsp);
        }
    }

    private void fillComboBoxXX() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboQuocGia.getModel();
        model.removeAllElements();
        List<XuatXu> list = daoXuatXu.selectAll();
        for (XuatXu xx : list) {
            model.addElement(xx);
        }
    }

    private boolean checkSP(int ma) {
        clearListSanPham();
        StringBuilder error = new StringBuilder();
        String ten = txtTenLoai.getText();
        String giaBan = txtGiaBan.getText();
        String giaNhap = txtGiaNhap.getText();
        String soLuong = txtSoLuong.getText();
        String checkten = "[\\p{L} ]+";
        if (ten.isEmpty()) {
            error.append("Tên sản phẩm không được bỏ trống\n");
        } else if (!ten.matches(checkten)) {
            error.append("Tên sản phẩm không chứa ký tự số\n");
        }
        for (SanPham sp : listSP) {
            if (sp.getMa() != ma && ten.equals(sp.getTen())) {
                error.append("Tên sản phẩm đã tồn tại\n");
                break;
            }
        }
        if (giaNhap.isEmpty() || giaBan.isEmpty()) {
            error.append("Giá không được bỏ trống\n");
        } else {
            try {
                double gNhap = Double.parseDouble(giaNhap);
                double gBan = Double.parseDouble(giaBan);
                if (gNhap < 1000) {
                    error.append("Giá nhập > 1000\n");
                }
                if (gBan < gNhap) {
                    error.append("Giá bán >= Giá nhập\n");
                }
            } catch (Exception e) {
                error.append("Vui lòng nhập giá bằng số\n");
            }
        }
        if (soLuong.isEmpty()) {
            error.append("Số lượng không được bỏ trống\n");
        } else {
            try {
                int sluong = Integer.parseInt(soLuong);
                if (sluong < 5) {
                    error.append("Số lượng >5\n");
                }
            } catch (Exception e) {
                error.append("Vui lòng nhập số lượng bằng số\n");
            }
        }

        if (error.length() > 0) {
            MsgBox.alert(this, error.toString().trim());
            return false;
        }
        return true;
    }

    private void timKiemSP() {
        String tim = txtTimSanPham.getText();
        listSP = tim.isEmpty() ? daoSanPham.selectAll() : daoSanPham.selectByKeyword(tim);
        fillToTablebSP();
    }

    private void editSP() {
        try {
            int ma = (int) tblSanPham.getValueAt(row, 0);
            SanPham sp = daoSanPham.selectById(ma);
            if (sp != null) {
                setFormSP(sp);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
//lsp

    private void clearListLoaiSanPham() {
        listLSP.clear();
        listLSP.addAll(daoLoaiSanPham.selectAll());
    }

    public void fillToTablebLSP() {
        DefaultTableModel model = (DefaultTableModel) tblLoaiSanPham.getModel();
        model.setRowCount(0);
        try {
            for (LoaiSanPham lsp : listLSP) {
                model.addRow(new Object[]{
                    lsp.getMa(),
                    lsp.getTen(),});
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void deleteLSP() {
        if (!Auth.isManager()) {
            MsgBox.alert(this, "Bạn không có quyền xóa");
            return;
        }
        if (row >= 0) {
            LoaiSanPham model = getFormLSP();
            if (MsgBox.confirm(this, "Bạn thực sự muốn xóa khách hàng này?")) {
                if (daoLoaiSanPham.delete(model) == 1) {
                    clearListLoaiSanPham();
                    fillToTablebLSP();
                    MsgBox.alert(this, "Xóa thành công.");
                    clearFormLSP();
                } else {
                    MsgBox.alert(this, "Xóa thất bại.");
                }
            }
        } else {
            MsgBox.alert(this, "Vui lòng chọn một khách hàng để xóa?");
        }
    }

    private void saveLSP() {
        int ma = row >= 0 ? (int) tblLoaiSanPham.getValueAt(row, 0) : Integer.parseInt(daoSanPham.maxID() + 1);
        LoaiSanPham lsp = daoLoaiSanPham.selectById(ma);
        if (lsp != null) {
            updateLSP();
        } else {
            insertLSP();
        }
    }

    private void insertLSP() {
        LoaiSanPham model = getFormLSP();
        if (checkLSP(model.getMa())) {
            try {

                if (daoLoaiSanPham.insert(model) == 1) {
                    clearListLoaiSanPham();
                    fillToTablebLSP();
                    clearFormLSP();
                    MsgBox.alert(this, "Thêm mới thành công");
                } else {
                    MsgBox.alert(this, "Thêm mới thất bại");
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }

    private void updateLSP() {
        LoaiSanPham model = getFormLSP();
        if (checkLSP(model.getMa())) {
            try {
                if (daoLoaiSanPham.update(model) == 1) {
                    clearListLoaiSanPham();
                    fillToTablebLSP();
                    clearFormLSP();
                    MsgBox.alert(this, "Cập nhật thành công");
                } else {
                    MsgBox.alert(this, "Cập nhật thất bại");
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }

    private void clearFormLSP() {
        setFormLSP(new LoaiSanPham());
        row = -1;
    }

    private void setFormLSP(LoaiSanPham model) {
        txtTenLoai.setText(model.getTen());
        txtMoTaLoaiSP.setText(model.getMoTa());
    }

    private LoaiSanPham getFormLSP() {
        LoaiSanPham lsp = new LoaiSanPham();
        if (row >= 0) {
            int id = (int) tblLoaiSanPham.getValueAt(row, 0);
            lsp.setMa(id);
        } else {
            lsp.setMa(Integer.parseInt(daoLoaiSanPham.maxID()) + 1);
        }
        lsp.setTen(Xpro.toUpperFirstChar(txtTenLoai.getText()));
        lsp.setMoTa(txtMoTaLoaiSP.getText());
        return lsp;
    }

    private boolean checkLSP(int ma) {
        clearListLoaiSanPham();
        StringBuilder error = new StringBuilder();
        String ten = txtTenLoai.getText();
        String moTa = txtMoTaLoaiSP.getText();
        String checkten = "[\\p{L} ]+";
        if (ten.isEmpty()) {
            error.append("Tên loại sản phẩm không được bỏ trống\n");
        } else if (!ten.matches(checkten)) {
            error.append("Tên loại sản phẩm không chứa ký tự số\n");
        }
        for (LoaiSanPham lsp : listLSP) {
            if (lsp.getMa() != ma && ten.equals(lsp.getTen())) {
                error.append("tên loại sản phẩm đã tồn tại\n");
                break;
            }
        }

        if (moTa.isEmpty()) {
            error.append("Mô tả không được bỏ trống\n");
        }
        if (error.length() > 0) {
            MsgBox.alert(this, error.toString().trim());
            return false;
        }
        return true;
    }

    private void timKiemLSP() {
        String tim = txtTimLoaiSP.getText();
        listLSP = tim.isEmpty() ? daoLoaiSanPham.selectAll() : daoLoaiSanPham.selectByKeyword(tim);
        fillToTablebLSP();
    }

    private void editLSP() {
        try {
            int ma = (int) tblLoaiSanPham.getValueAt(row, 0);
            LoaiSanPham lsp = daoLoaiSanPham.selectById(ma);
            if (lsp != null) {
                setFormLSP(lsp);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
//MS

    private void clearListMS() {
        listMS.clear();
        listMS.addAll(daoMauSac.selectAll());
    }

    public void fillToTablebMS() {
        DefaultTableModel model = (DefaultTableModel) tblMauSac.getModel();
        model.setRowCount(0);
        try {
            for (MauSac ms : listMS) {
                model.addRow(new Object[]{
                    ms.getMa(),
                    ms.getTen(),});
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void deleteMS() {
        if (!Auth.isManager()) {
            MsgBox.alert(this, "Bạn không có quyền xóa");
            return;
        }
        if (row >= 0) {
            MauSac ms = getFormMS();
            if (MsgBox.confirm(this, "Bạn thực sự muốn xóa màu sắc này?")) {
                if (daoMauSac.delete(ms) == 1) {
                    clearListMS();
                    fillToTablebMS();
                    MsgBox.alert(this, "Xóa thành công.");
                    clearFormMS();
                } else {
                    MsgBox.alert(this, "Xóa thất bại.");
                }
            }
        } else {
            MsgBox.alert(this, "Vui lòng chọn một khách hàng để xóa?");
        }
    }

    private void saveMS() {
        if (row >= 0) {
            updateMS();
        } else {
            insertMS();
        }
    }

    private void insertMS() {
        MauSac model = getFormMS();
        if (checkMS(model.getMa())) {
            try {
                if (daoMauSac.insert(model) == 1) {
                    clearListMS();
                    fillToTablebMS();
                    clearFormMS();
                    MsgBox.alert(this, "Thêm mới thành công");
                } else {
                    MsgBox.alert(this, "Thêm mới thất bại");
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }

    private void updateMS() {
        MauSac model = getFormMS();
        if (checkMS(model.getMa())) {
            try {
                if (daoMauSac.update(model) == 1) {
                    clearListMS();
                    fillToTablebMS();
                    clearFormMS();
                    MsgBox.alert(this, "Cập nhật thành công");
                } else {
                    MsgBox.alert(this, "Cập nhật thất bại");
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }

    private void clearFormMS() {
        setFormMS(new MauSac());
        row = -1;
    }

    private void setFormMS(MauSac model) {
        txtTenMau.setText(model.getTen());
        txtMoTaMauSac.setText(model.getMoTa());
    }

    private MauSac getFormMS() {
        MauSac ms = new MauSac();
        if (row >= 0) {
            int id = (int) tblMauSac.getValueAt(row, 0);
            ms.setMa(id);
        } else {
            ms.setMa(Integer.parseInt(daoMauSac.maxID()) + 1);
        }
        ms.setTen(Xpro.toUpperFirstChar(txtTenMau.getText()));
        ms.setMoTa(txtMoTaMauSac.getText());
        return ms;
    }

    private boolean checkMS(int ma) {
        clearListMS();
        StringBuilder error = new StringBuilder();
        String ten = txtTenMau.getText();
        String moTa = txtMoTaMauSac.getText();
        String checkten = "[\\p{L} ]+";
        if (ten.isEmpty()) {
            error.append("Tên màu sắc không được bỏ trống\n");
        } else if (!ten.matches(checkten)) {
            error.append("Tên màu sắc không chứa ký tự số\n");
        }
        for (MauSac ms : listMS) {
            if (ms.getMa() != ma && ten.equals(ms.getTen())) {
                error.append("Tên màu đã tồn tại\n");
                break;
            }
        }

        if (moTa.isEmpty()) {
            error.append("Mô tả không được bỏ trống\n");
        }
        if (error.length() > 0) {
            MsgBox.alert(this, error.toString().trim());
            return false;
        }
        return true;
    }

    private void timKiemMS() {
        String tim = txtTimMau.getText();
        listMS = tim.isEmpty() ? daoMauSac.selectAll() : daoMauSac.selectByKeyword(tim);
        fillToTablebMS();
    }

    private void editMS() {
        try {
            int ma = (int) tblMauSac.getValueAt(row, 0);
            MauSac ms = daoMauSac.selectById(ma);
            if (ms != null) {
                setFormMS(ms);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
//xuatxu

    private void clearListXX() {
        listXX.clear();
        listXX.addAll(daoXuatXu.selectAll());
    }

    public void fillToTablebXX() {
        DefaultTableModel model = (DefaultTableModel) tblXuatXu.getModel();
        model.setRowCount(0);
        try {
            for (XuatXu xx : listXX) {
                model.addRow(new Object[]{
                    xx.getMa(),
                    xx.getTen(),});
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void deleteXX() {
        if (!Auth.isManager()) {
            MsgBox.alert(this, "Bạn không có quyền xóa");
            return;
        }
        if (row >= 0) {
            XuatXu ms = getFormXX();
            if (MsgBox.confirm(this, "Bạn thực sự muốn xóa khách hàng này?")) {
                if (daoXuatXu.delete(ms) == 1) {
                    clearListXX();
                    fillToTablebXX();
                    clearFormXX();
                    MsgBox.alert(this, "Xóa thành công.");
                } else {
                    MsgBox.alert(this, "Xóa thất bại.");
                }
            }
        } else {
            MsgBox.alert(this, "Vui lòng chọn một khách hàng để xóa?");
        }
    }

    private void saveXX() {
        if (row >= 0) {
            updateXX();
        } else {
            insertXX();
        }
    }

    private void insertXX() {
        XuatXu model = getFormXX();
        if (checkXX(model.getMa())) {
            try {
                if (daoXuatXu.insert(model) == 1) {
                    clearListXX();
                    fillToTablebXX();
                    clearFormXX();
                    MsgBox.alert(this, "Thêm mới thành công");
                } else {
                    MsgBox.alert(this, "Thêm mới thất bại");
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }

    private void updateXX() {
        XuatXu model = getFormXX();
        if (checkXX(model.getMa())) {
            try {
                if (daoXuatXu.update(model) == 1) {
                    clearListXX();
                    fillToTablebXX();
                    clearFormXX();
                    MsgBox.alert(this, "Cập nhật thành công");
                } else {
                    MsgBox.alert(this, "Cập nhật thất bại");
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }

    private void clearFormXX() {
        setFormXX(new XuatXu());
        row = -1;
    }

    private void setFormXX(XuatXu model) {
        txtTenXX.setText(model.getTen());
        txtMoTaXX.setText(model.getMoTa());
    }

    private XuatXu getFormXX() {
        XuatXu xx = new XuatXu();
        if (row >= 0) {
            int id = (int) tblXuatXu.getValueAt(row, 0);
            xx.setMa(id);
        } else {
            xx.setMa(Integer.parseInt(daoXuatXu.maxID() + 1));
        }
        xx.setTen(Xpro.toUpperFirstChar(txtTenXX.getText()));
        xx.setMoTa(txtMoTaXX.getText());
        return xx;
    }

    private boolean checkXX(int ma) {
        clearListXX();
        StringBuilder error = new StringBuilder();
        String ten = txtTenXX.getText();
        String moTa = txtMoTaXX.getText();
        String checkten = "[\\p{L} ]+";
        if (ten.isEmpty()) {
            error.append("Tên xuất xứ không được bỏ trống\n");
        } else if (!ten.matches(checkten)) {
            error.append("Tên xuất xứ không chứa ký tự số\n");
        }
        for (XuatXu xx : listXX) {
            if (xx.getMa() != ma && ten.equals(xx.getTen())) {
                error.append("Tên xuất xứ đã tồn tại\n");
                break;
            }
        }

        if (moTa.isEmpty()) {
            error.append("Mô tả không được bỏ trống\n");
        }
        if (error.length() > 0) {
            MsgBox.alert(this, error.toString().trim());
            return false;
        }
        return true;
    }

    private void timKiemXX() {
        String tim = txtTimXuatXu.getText();
        listXX = tim.isEmpty() ? daoXuatXu.selectAll() : daoXuatXu.selectByKeyword(tim);
        fillToTablebXX();
    }

    private void editXX() {
        try {
            int ma = (int) tblXuatXu.getValueAt(row, 0);
            XuatXu xx = daoXuatXu.selectById(ma);
            if (xx != null) {
                setFormXX(xx);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
